// server.js
const express = require("express");
const cors = require("cors");

const sequelize = require("./database"); // Conex√£o com o banco de dados
const ofertasRoutes = require("./routes/ofertasRoutes");
const usuariosRoutes = require("./routes/usuariosRoutes");
const milhasRoutes = require("./routes/milhasRoutes");
const negociacaoRoutes = require("./routes/negociacaoRoutes");
const loginRoutes = require("./routes/loginRoutes");
const garantiaRoutes = require("./routes/garantiaRoutes");
const reservaRoutes = require("./routes/paymentRoutes");
const cleanIndexes = require("./cleanIndexes.js");
const avaliationRouter = require("./routes/avaliacoes");

const app = express();
const port = 5001;

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// Executar a limpeza de √≠ndices antes de iniciar o servidor
cleanIndexes()
  .then(() => {
    console.log("üîç √çndices verificados e limpos!");

    // Teste de Conex√£o com o Banco de Dados
    return sequelize.authenticate();
  })
  .then(() => {
    console.log("‚úÖ Conex√£o com o banco de dados bem-sucedida!");

    // Sincroniza√ß√£o do Banco de Dados
    return sequelize.sync({ alter: true });
  })
  .then(() => {
    console.log("‚úÖ Banco de dados sincronizado");

    app.listen(port, () => {
      console.log(`üöÄ Servidor rodando na porta ${port}`);
    });
  })
  .catch((error) => {
    console.error("‚ùå Erro ao iniciar o servidor:", error);
  });

// Usar as rotas
app.use("/api/ofertas", ofertasRoutes);
app.use("/api/usuarios", usuariosRoutes);
app.use("/api", milhasRoutes);
app.use("/api/negociacao", negociacaoRoutes);
app.use("/api", loginRoutes);
app.use("/api/avaliacoes", avaliationRouter);
app.use("/api/garantias", garantiaRoutes);
app.use("/api", reservaRoutes);
